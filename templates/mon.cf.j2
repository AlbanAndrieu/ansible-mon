#
# {{ ansible_managed }}
# Example mon.cf file
#

#
# Global options
#
alertdir		= /usr/lib/mon/alert.d
mondir			= /usr/lib/mon/mon.d
logdir			= /var/log/mon
historicfile	= /var/log/mon/history.log
maxprocs		= 20
histlength		= 100
randstart		= 60s
dtlogging		= yes
dtlogfile		= dtlog

#
# Define groups of hosts to monitor
#
hostgroup localhost {{ mon_hostgroup_localhost }}

#hostgroup www      {{ mon_hostgroup_www }}

hostgroup fs       {{ mon_hostgroup_fs }}

hostgroup gw       {{ mon_hostgroup_gw }}

hostgroup shell    {{ mon_hostgroup_shell }}

hostgroup ntp      {{ mon_hostgroup_ntp }}

hostgroup dns      {{ mon_hostgroup_dns }}

hostgroup {{ mon_custom_group }} {{ mon_hostgroup_custom_group }}

#
# Define watches
#
watch {{ mon_custom_group }}
	service ping
		description Responses to ping
		interval 5m
		monitor fping.monitor
		period wd {Mon-Fri} hr {7am-10pm}
			alert mail.alert {{ mon_weekly_email }}
			alertevery 1h
		period wd {Sat-Sun}
			alert mail.alert {{ mon_weekend_email }}
	service http_varnish
		description HTTP service varnish on port 82
		interval 10m
		monitor http.monitor
		period
			numalerts 10
			alert mail.alert root@localhost
			upalert mail.alert root@localhost
    service http_apache
        description HTTP service apache on port 7070
        interval 10m
        monitor http.monitor -p 8080
        period
            numalerts 10
            alert mail.alert root@localhost
            upalert mail.alert root@localhost
    service http
        description HTTP service
        interval 10m
        monitor http.monitor -p 80
        period
            numalerts 10
    service smtp
        description SMTP service
        interval 10m
        monitor smtp.monitor -t 60
        period
           numalerts 10
    service telnet
        description TELNET service
        interval 10m
        monitor telnet.monitor
        period wd {Mon-Fri} hr {7am-10pm}
           alertevery 1h
           alertafter 2 30m
#	service pop3
#		description POP3 service
#		interval 10m
#		monitor pop3.monitor
#		period
#			numalerts 10
#			alert mail.alert root@localhost
#			upalert mail.alert root@localhost
#	service imap
#		description IMAP service
#		interval 10m
#		monitor imap.monitor -t 60
#		period
#			numalerts 10
#			alert mail.alert root@localhost
#			upalert mail.alert root@localhost
    service mysql
        description Mysql service
        interval 1h
        monitor msql-mysql.monitor --mode mysql --username=root --password=microsoft --database=mysql --port=3306 {{ mon_localhost }}
        period
            alert mail.alert root@localhost
            numalerts 10
#    service ldap
#        description LDAP service
#        interval 1h
#        monitor ldap.monitor -base='dc=ldap,dc=nabla,dc=mobi'
#        period
#            alert mail.alert root@localhost
#            numalerts 10
# Monitor free disk space on the server
#
# When space gets below 5 megs, send mail, and delete
# the oldest nightly snapshots.
#
# monitors that terminate with ";;" are not executed with the
# host group appended to the command line
#
    service freespace
        description Freespace service
        interval 1h
        monitor freespace.monitor /:20% /home:10% /var:15% /usr:20% /usr/local:20% /tmp:10% /workspace:5000 /media:5000 ;;
   	    period wd {Sun-Sat}
    		alert mail.alert root@localhost
     		alertevery 2h
    		upalert mail.alert -S "fsmon/fs: ok" root@localhost
		    upalertafter 10m
   	    period LOGFILE: wd {Sun-Sat}
    		alert file.alert -d /var/log/mon fsmon.log
#    service reboot
#        description Reboot service
#        interval 1d
#        monitor reboot.monitor 
#        period
#            alert mail.alert root@localhost
#            numalerts 10
#    service dns
#        description DNS service
#        interval 5m
#        monitor dns.monitor -zone nabla.mobi -zone home.nabla.mobi -master 82.231.208.223
#        period
#            alert mail.alert root@localhost
#            numalerts 10

watch localhost
    service ping
        description Responses to ping
        interval 5m
        monitor fping.monitor
        period wd {Mon-Fri} hr {7am-10pm}
            alert mail.alert {{ mon_weekly_email }}
            alertevery 1h
        period wd {Sat-Sun}
            alert mail.alert {{ mon_weekend_email }}
	service http
		description HTTP service on port 80
		interval 10m
		monitor http.monitor
		period
			numalerts 10
			alert mail.alert {{ mon_admin_email }}
			upalert mail.alert {{ mon_weekend_email }}
	service smtp
		description SMTP service
		interval 10m
		monitor smtp.monitor -t 60
		period
			numalerts 10
			alert mail.alert {{ mon_admin_email }}
			upalert mail.alert {{ mon_weekend_email }}
	service telnet
		description TELNET service
		interval 10m
		monitor telnet.monitor
		period wd {Mon-Fri} hr {7am-10pm}
			alertevery 1h
			alertafter 2 30m
			alert mail.alert {{ mon_weekend_email }}

#; Our web servers.
#watch www
# service wwwmon
#  description monitor www services
#  interval 5m
#  monitor http_t.monitor -l /var/log/mon/www.log -T 15.0 -t 100
#   period wd {Sun-Sat}
#    alert mail.alert -S {{ mon_weekend_email }}
#     alertafter 3 20m
#     alertevery 1h
#    upalert mail.alert -S "wwwmon/www: ok" {{ mon_weekend_email }}
#     upalertafter 15m

#; Shell servers - check if they're up.
watch shell
 service shellicmp
  description monitor shell servers with icmp
  interval 1m
  monitor fping.monitor
   period wd {Sun-Sat}
    alert mail.alert {{ mon_weekend_email }}
     alertevery 30m
     alertafter 3 7m
    upalert mail.alert -S "shellmon/shell: ok" {{ mon_weekend_email }}
     upalertafter 10m
   period LOGFILE: wd {Sun-Sat}
    alert file.alert -d /var/log/mon shellicmp.log
 service shellssh
  description check ssh on shell servers
  interval 8m
  monitor tcp.monitor -p 22
   period wd {Sun-Sat}
    alert mail.alert {{ mon_weekend_email }}
     alertevery 90m
     alertafter 2 30m
    upalert mail.alert -S "shellssh/shell: ok" {{ mon_weekend_email }}
     upalertafter 20m
   period LOGFILE: wd {Sun-Sat}

#; Upstream routers
watch gw
 service gwicmp
  description icmp checks of critical network devices
  interval 2m
  monitor fping.monitor
   period wd {Sun-Sat}
    alert mail.alert root@localhost
     alertevery 60m
     alertafter 3 10m
    upalert mail.alert -S "gwicmp/gw: ok" root@localhost
    upalertafter 20m
   period LOGFILE: wd {Sun-Sat}
    alert file.alert -d /var/log/mon gw.log
        
#; Watch local disk space on the file server.
watch fs
 service fsmon
  description file system storage monitoring
  interval 5m
  monitor freespace.monitor /:20% /jenkins:10% /var:15% /usr:20% /usr/local:20% /tmp:10%;;
   period wd {Sun-Sat}
    alert mail.alert {{ mon_weekend_email }}
     alertevery 2h
    upalert mail.alert -S "fsmon/fs: ok" {{ mon_weekend_email }}
     upalertafter 10m
   period LOGFILE: wd {Sun-Sat}
    alert file.alert -d /var/log/mon fsmon.log

#; DNS Servers.
watch dns
 service dnsicmp
  description ping the dns servers
  interval 4m
  monitor fping.monitor
   period wd {Sun-Sat}
    alert mail.alert {{ mon_weekend_email }}
     alertevery 1h
     alertafter 3 16m
    upalert mail.alert -S "dnsicmp/dns: ok" {{ mon_weekend_email }}
     upalertafter 10m
   period LOGFILE: wd {Sun-Sat}
    alert file.alert -d /var/log/mon dns.log

#; Network Time Servers
watch ntp
 service ntpicmp
  description icmp monitoring of ntp servers
  interval 5m
  monitor fping.monitor
   period wd {Sun-Sat}
    alert mail.alert {{ mon_weekend_email }}
     alertevery 2h
     alertafter 3 20m
    upalert mail.alert -S "ntpicmp/ntp: ok" {{ mon_weekend_email }}
     upalertafter 10m
   period LOGFILE: wd {Sun-Sat}
    alert file.alert -d /var/log/mon ntp.log
# service ntpmon
#  description check ntp servers status
#  interval 5m
#  monitor ntp.monitor -s 3
#   period wd {Sun-Sat}
#    alert mail.alert {{ mon_weekend_email }}
#     alertevery 2h
#     alertafter 3 25m
#    upalert mail.alert -S "ntpmon/ntp: ok" {{ mon_weekend_email }}
#     upalertafter 10m
#   period LOGFILE: wd {Sun-Sat}
#    alert file.alert -d /var/log/mon ntp.log

{% if mon_user_enabled %}
userfile = /etc/mon/user.cf
authtype = userfile
{% endif %}
